{"version":3,"sources":["Components/UI/Card.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filtered","filter","exp","toString","selectedYear","ExpenseForm","enteredTitle","setenteredTitle","enteredAmount","setenteredAmount","enteredDate","setenteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","Button","variant","onClick","onCancel","NewExpense","isEditing","setIsEditing","size","enteredExpensedata","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc82fa58.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import React from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = event =>{\n    props.onChangeFilter(event.target.value);\n  }\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n    const year = props.date.getFullYear();\n\n    return <div className=\"expense-date\">\n        <div className=\"expense-date__month\">{month}</div>\n        <div className=\"expense-date__day\">{day}</div>\n        <div className=\"expense-date__year\">{year}</div>\n    </div>\n}\n\nexport default ExpenseDate;","import React from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nconst ExpenseItem = (props) => {\n    return <li>\n    <Card className=\"expense-item\">\n        <ExpenseDate date={props.date}/>\n        <div className=\"expense-item__description\">\n            <h2>{props.title}</h2>\n            <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n    </Card>\n    </li>\n}\n\nexport default ExpenseItem;","import './ExpensesList.css';\nimport ExpenseItem from './ExpenseItem';\nconst ExpensesList = props => {\n\n    if(props.items.length === 0){\n        return <h2 className=\"expense-list__fallback\">Found no expenses.</h2>\n    }\n    return <ul className=\"expenses-list\">\n        {props.items.map(expense =>\n            <ExpenseItem\n                id={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n            />)}\n    </ul>\n}\n\nexport default ExpensesList;","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;","import React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;","import React from 'react';\n\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;","import React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport './Expenses.css';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState('2021');\n    const filterChangeHandler = selectedYear => {\n        setFilteredYear(selectedYear);\n    }\n    const filtered = props.expenses.filter(exp => exp.date.getFullYear().toString() === filteredYear);\n\n    \n    return <Card className=\"expenses\">\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n        <ExpensesChart expenses={filtered}/>\n        <ExpensesList items={filtered}/>\n    </Card>\n}\n\nexport default Expenses;","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './ExpenseForm.css';\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setenteredTitle] = useState('');\n    const [enteredAmount, setenteredAmount] = useState('');\n    const [enteredDate, setenteredDate] = useState('');\n    const titleChangeHandler = (event) => {\n        setenteredTitle(event.target.value);\n    }\n    const amountChangeHandler = (event) => {\n        setenteredAmount(event.target.value);\n    }\n    const dateChangeHandler = (event) => {\n        setenteredDate(event.target.value);\n    }\n    const submitHandler = (event) => {\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate),\n        };\n        props.onSaveExpenseData(expenseData);\n        setenteredAmount('');\n        setenteredDate('');\n        setenteredTitle('');\n    }\n    return <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label>Title</label>\n                <input type=\"text\" onChange={titleChangeHandler} value={enteredTitle} />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Amout</label>\n                <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\n            </div>\n        </div>\n        <div className=\"new-expense__actions\">\n            <Button variant=\"outline-primary\" type=\"button\" onClick={props.onCancel}>Cancel</Button>{' '}\n            <Button variant=\"primary\" type=\"submit\">Add Expenses</Button>{' '}\n        </div>\n    </form>\n}\n\nexport default ExpenseForm;","import React, { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport {Button} from 'react-bootstrap';\nimport './NewExpense.css';\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const saveExpenseDataHandler = (enteredExpensedata) => {\n        const expenseData = {\n            ...enteredExpensedata,\n            id: Math.random().toString()\n        };\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    }\n    const starteditingHandler = () => {\n        setIsEditing(true);\n    }\n    const stopitingHandler = () => {\n        setIsEditing(false);\n    }\n    return <div className=\"new-expense\">\n        <div className=\"mb-2\">\n            {!isEditing && <Button variant=\"primary\" size=\"lg\" onClick={starteditingHandler}>\n            Add New Expense\n            </Button>}\n        </div>\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopitingHandler} />}\n    </div>\n}\n\nexport default NewExpense;","import React , { useState } from 'react';\nimport './App.css';\nimport Expenses from './Components/Expenses/Expenses';\nimport NewExpense from './Components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses,setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = expense => {\n    setExpenses((prevExpenses) => {\n      return [expense,...prevExpenses];\n    });\n  }\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}